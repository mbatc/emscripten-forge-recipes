#!/bin/sh
set -ex

CMAKE_ARGS="$CMAKE_ARGS -DCMAKE_BUILD_TYPE:STRING=Release -DCMAKE_FIND_ROOT_PATH=${PREFIX} -DCMAKE_INSTALL_RPATH=${PREFIX}/lib"
CMAKE_ARGS="$CMAKE_ARGS -DCURSES_INCLUDE_PATH=${PREFIX}/include -DBUILD_CursesDialog=ON -DCMake_HAVE_CXX_MAKE_UNIQUE:INTERNAL=FALSE"
CMAKE_ARGS="$CMAKE_ARGS -DCMAKE_PREFIX_PATH=${PREFIX}"

CMAKE_ARGS="$CMAKE_ARGS -DCMake_HAVE_CXX_FILESYSTEM=0"
cmake ${CMAKE_ARGS} \
    -DCMAKE_VERBOSE_MAKEFILE=1 \
    -DCMAKE_INSTALL_PREFIX=$PREFIX \
    -DCMAKE_USE_SYSTEM_LIBRARIES=ON \
    -DBUILD_QtDialog=OFF \
    -DCMAKE_USE_SYSTEM_LIBRARY_LIBARCHIVE=OFF \
    -DCMAKE_USE_SYSTEM_LIBRARY_JSONCPP=OFF \
    . || (cat TryRunResults.cmake; false)

# CMake automatically selects the highest C++ standard available

make install -j${CPU_COUNT}

